Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> context
Rule 1     context -> command
Rule 2     context -> commands
Rule 3     command -> args
Rule 4     command -> <empty>
Rule 5     commands -> command
Rule 6     commands -> commands SEMI command
Rule 7     commands -> commands AND command
Rule 8     commands -> commands PIPE command
Rule 9     commands -> commands OR command
Rule 10    commands -> commands NEWLINE command
Rule 11    sub_expression -> DOLLAR_LPAREN commands RPAREN
Rule 12    sub_expression -> BANG_LPAREN commands RPAREN
Rule 13    sub_expression -> ATDOLLAR_LPAREN commands RPAREN
Rule 14    sub_expression -> DOLLAR_LBRACKET commands RBRACKET
Rule 15    sub_expression -> BANG_LBRACKET commands RBRACKET
Rule 16    sub_expression -> AT_LPAREN commands RPAREN
Rule 17    sub_expression -> DOLLAR_LPAREN commands
Rule 18    sub_expression -> BANG_LPAREN commands
Rule 19    sub_expression -> ATDOLLAR_LPAREN commands
Rule 20    sub_expression -> DOLLAR_LBRACKET commands
Rule 21    sub_expression -> BANG_LBRACKET commands
Rule 22    sub_expression -> AT_LPAREN commands
Rule 23    arg -> sub_expression
Rule 24    arg -> DOLLAR_LPAREN
Rule 25    arg -> DOLLAR_LBRACKET
Rule 26    arg -> BANG_LPAREN
Rule 27    arg -> BANG_LBRACKET
Rule 28    arg -> ATDOLLAR_LPAREN
Rule 29    arg -> AT_LPAREN
Rule 30    arg -> STRING
Rule 31    arg -> ANY
Rule 32    args -> arg
Rule 33    args -> args arg

Terminals, with rules where they appear

AND                  : 7
ANY                  : 31
ATDOLLAR_LPAREN      : 13 19 28
AT_LPAREN            : 16 22 29
BANG_LBRACKET        : 15 21 27
BANG_LPAREN          : 12 18 26
DOLLAR_LBRACKET      : 14 20 25
DOLLAR_LPAREN        : 11 17 24
NEWLINE              : 10
OR                   : 9
PIPE                 : 8
RBRACKET             : 14 15
RPAREN               : 11 12 13 16
SEMI                 : 6
STRING               : 30
error                : 

Nonterminals, with rules where they appear

arg                  : 32 33
args                 : 3 33
command              : 1 5 6 7 8 9 10
commands             : 2 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
context              : 0
sub_expression       : 23

Parsing method: LALR

state 0

    (0) S' -> . context
    (1) context -> . command
    (2) context -> . commands
    (3) command -> . args
    (4) command -> .
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

    context                        shift and go to state 1
    command                        shift and go to state 2
    commands                       shift and go to state 3
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 1

    (0) S' -> context .



state 2

    (1) context -> command .
    (5) commands -> command .

  ! reduce/reduce conflict for $end resolved using rule 1 (context -> command .)
    $end            reduce using rule 1 (context -> command .)
    SEMI            reduce using rule 5 (commands -> command .)
    AND             reduce using rule 5 (commands -> command .)
    PIPE            reduce using rule 5 (commands -> command .)
    OR              reduce using rule 5 (commands -> command .)
    NEWLINE         reduce using rule 5 (commands -> command .)

  ! $end            [ reduce using rule 5 (commands -> command .) ]


state 3

    (2) context -> commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

    $end            reduce using rule 2 (context -> commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19


state 4

    (3) command -> args .
    (33) args -> args . arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 3 (command -> args .)
    SEMI            reduce using rule 3 (command -> args .)
    AND             reduce using rule 3 (command -> args .)
    PIPE            reduce using rule 3 (command -> args .)
    OR              reduce using rule 3 (command -> args .)
    NEWLINE         reduce using rule 3 (command -> args .)
    RPAREN          reduce using rule 3 (command -> args .)
    RBRACKET        reduce using rule 3 (command -> args .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 3 (command -> args .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 3 (command -> args .) ]
  ! BANG_LPAREN     [ reduce using rule 3 (command -> args .) ]
  ! BANG_LBRACKET   [ reduce using rule 3 (command -> args .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 3 (command -> args .) ]
  ! AT_LPAREN       [ reduce using rule 3 (command -> args .) ]
  ! STRING          [ reduce using rule 3 (command -> args .) ]
  ! ANY             [ reduce using rule 3 (command -> args .) ]

    arg                            shift and go to state 20
    sub_expression                 shift and go to state 6

state 5

    (32) args -> arg .

    DOLLAR_LPAREN   reduce using rule 32 (args -> arg .)
    DOLLAR_LBRACKET reduce using rule 32 (args -> arg .)
    BANG_LPAREN     reduce using rule 32 (args -> arg .)
    BANG_LBRACKET   reduce using rule 32 (args -> arg .)
    ATDOLLAR_LPAREN reduce using rule 32 (args -> arg .)
    AT_LPAREN       reduce using rule 32 (args -> arg .)
    STRING          reduce using rule 32 (args -> arg .)
    ANY             reduce using rule 32 (args -> arg .)
    $end            reduce using rule 32 (args -> arg .)
    SEMI            reduce using rule 32 (args -> arg .)
    AND             reduce using rule 32 (args -> arg .)
    PIPE            reduce using rule 32 (args -> arg .)
    OR              reduce using rule 32 (args -> arg .)
    NEWLINE         reduce using rule 32 (args -> arg .)
    RPAREN          reduce using rule 32 (args -> arg .)
    RBRACKET        reduce using rule 32 (args -> arg .)


state 6

    (23) arg -> sub_expression .

    DOLLAR_LPAREN   reduce using rule 23 (arg -> sub_expression .)
    DOLLAR_LBRACKET reduce using rule 23 (arg -> sub_expression .)
    BANG_LPAREN     reduce using rule 23 (arg -> sub_expression .)
    BANG_LBRACKET   reduce using rule 23 (arg -> sub_expression .)
    ATDOLLAR_LPAREN reduce using rule 23 (arg -> sub_expression .)
    AT_LPAREN       reduce using rule 23 (arg -> sub_expression .)
    STRING          reduce using rule 23 (arg -> sub_expression .)
    ANY             reduce using rule 23 (arg -> sub_expression .)
    $end            reduce using rule 23 (arg -> sub_expression .)
    SEMI            reduce using rule 23 (arg -> sub_expression .)
    AND             reduce using rule 23 (arg -> sub_expression .)
    PIPE            reduce using rule 23 (arg -> sub_expression .)
    OR              reduce using rule 23 (arg -> sub_expression .)
    NEWLINE         reduce using rule 23 (arg -> sub_expression .)
    RPAREN          reduce using rule 23 (arg -> sub_expression .)
    RBRACKET        reduce using rule 23 (arg -> sub_expression .)


state 7

    (24) arg -> DOLLAR_LPAREN .
    (11) sub_expression -> DOLLAR_LPAREN . commands RPAREN
    (17) sub_expression -> DOLLAR_LPAREN . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! BANG_LPAREN     [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! BANG_LBRACKET   [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! AT_LPAREN       [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! STRING          [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! ANY             [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! $end            [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! SEMI            [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! AND             [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! PIPE            [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! OR              [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! NEWLINE         [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! RPAREN          [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! RBRACKET        [ reduce using rule 24 (arg -> DOLLAR_LPAREN .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 21
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 8

    (25) arg -> DOLLAR_LBRACKET .
    (14) sub_expression -> DOLLAR_LBRACKET . commands RBRACKET
    (20) sub_expression -> DOLLAR_LBRACKET . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! BANG_LPAREN     [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! BANG_LBRACKET   [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! AT_LPAREN       [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! STRING          [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! ANY             [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! $end            [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! SEMI            [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! AND             [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! PIPE            [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! OR              [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! NEWLINE         [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! RPAREN          [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! RBRACKET        [ reduce using rule 25 (arg -> DOLLAR_LBRACKET .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 23
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 9

    (26) arg -> BANG_LPAREN .
    (12) sub_expression -> BANG_LPAREN . commands RPAREN
    (18) sub_expression -> BANG_LPAREN . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! BANG_LPAREN     [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! BANG_LBRACKET   [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! AT_LPAREN       [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! STRING          [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! ANY             [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! $end            [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! SEMI            [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! AND             [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! PIPE            [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! OR              [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! NEWLINE         [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! RPAREN          [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! RBRACKET        [ reduce using rule 26 (arg -> BANG_LPAREN .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 24
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 10

    (27) arg -> BANG_LBRACKET .
    (15) sub_expression -> BANG_LBRACKET . commands RBRACKET
    (21) sub_expression -> BANG_LBRACKET . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! BANG_LPAREN     [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! BANG_LBRACKET   [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! AT_LPAREN       [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! STRING          [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! ANY             [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! $end            [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! SEMI            [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! AND             [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! PIPE            [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! OR              [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! NEWLINE         [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! RPAREN          [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! RBRACKET        [ reduce using rule 27 (arg -> BANG_LBRACKET .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 25
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 11

    (28) arg -> ATDOLLAR_LPAREN .
    (13) sub_expression -> ATDOLLAR_LPAREN . commands RPAREN
    (19) sub_expression -> ATDOLLAR_LPAREN . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! BANG_LPAREN     [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! BANG_LBRACKET   [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! AT_LPAREN       [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! STRING          [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! ANY             [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! $end            [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! SEMI            [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! AND             [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! PIPE            [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! OR              [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! NEWLINE         [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! RPAREN          [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! RBRACKET        [ reduce using rule 28 (arg -> ATDOLLAR_LPAREN .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 26
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 12

    (29) arg -> AT_LPAREN .
    (16) sub_expression -> AT_LPAREN . commands RPAREN
    (22) sub_expression -> AT_LPAREN . commands
    (5) commands -> . command
    (6) commands -> . commands SEMI command
    (7) commands -> . commands AND command
    (8) commands -> . commands PIPE command
    (9) commands -> . commands OR command
    (10) commands -> . commands NEWLINE command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! reduce/reduce conflict for DOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for DOLLAR_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for BANG_LBRACKET resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ATDOLLAR_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AT_LPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for ANY resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for $end resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for AND resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for OR resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (command -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 4 (command -> .)
  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! BANG_LPAREN     [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! BANG_LBRACKET   [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! AT_LPAREN       [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! STRING          [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! ANY             [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! $end            [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! SEMI            [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! AND             [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! PIPE            [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! OR              [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! NEWLINE         [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! RPAREN          [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! RBRACKET        [ reduce using rule 29 (arg -> AT_LPAREN .) ]
  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    commands                       shift and go to state 27
    command                        shift and go to state 22
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 13

    (30) arg -> STRING .

    DOLLAR_LPAREN   reduce using rule 30 (arg -> STRING .)
    DOLLAR_LBRACKET reduce using rule 30 (arg -> STRING .)
    BANG_LPAREN     reduce using rule 30 (arg -> STRING .)
    BANG_LBRACKET   reduce using rule 30 (arg -> STRING .)
    ATDOLLAR_LPAREN reduce using rule 30 (arg -> STRING .)
    AT_LPAREN       reduce using rule 30 (arg -> STRING .)
    STRING          reduce using rule 30 (arg -> STRING .)
    ANY             reduce using rule 30 (arg -> STRING .)
    $end            reduce using rule 30 (arg -> STRING .)
    SEMI            reduce using rule 30 (arg -> STRING .)
    AND             reduce using rule 30 (arg -> STRING .)
    PIPE            reduce using rule 30 (arg -> STRING .)
    OR              reduce using rule 30 (arg -> STRING .)
    NEWLINE         reduce using rule 30 (arg -> STRING .)
    RPAREN          reduce using rule 30 (arg -> STRING .)
    RBRACKET        reduce using rule 30 (arg -> STRING .)


state 14

    (31) arg -> ANY .

    DOLLAR_LPAREN   reduce using rule 31 (arg -> ANY .)
    DOLLAR_LBRACKET reduce using rule 31 (arg -> ANY .)
    BANG_LPAREN     reduce using rule 31 (arg -> ANY .)
    BANG_LBRACKET   reduce using rule 31 (arg -> ANY .)
    ATDOLLAR_LPAREN reduce using rule 31 (arg -> ANY .)
    AT_LPAREN       reduce using rule 31 (arg -> ANY .)
    STRING          reduce using rule 31 (arg -> ANY .)
    ANY             reduce using rule 31 (arg -> ANY .)
    $end            reduce using rule 31 (arg -> ANY .)
    SEMI            reduce using rule 31 (arg -> ANY .)
    AND             reduce using rule 31 (arg -> ANY .)
    PIPE            reduce using rule 31 (arg -> ANY .)
    OR              reduce using rule 31 (arg -> ANY .)
    NEWLINE         reduce using rule 31 (arg -> ANY .)
    RPAREN          reduce using rule 31 (arg -> ANY .)
    RBRACKET        reduce using rule 31 (arg -> ANY .)


state 15

    (6) commands -> commands SEMI . command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    command                        shift and go to state 28
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 16

    (7) commands -> commands AND . command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    command                        shift and go to state 29
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 17

    (8) commands -> commands PIPE . command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    command                        shift and go to state 30
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 18

    (9) commands -> commands OR . command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    command                        shift and go to state 31
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 19

    (10) commands -> commands NEWLINE . command
    (3) command -> . args
    (4) command -> .
    (32) args -> . arg
    (33) args -> . args arg
    (23) arg -> . sub_expression
    (24) arg -> . DOLLAR_LPAREN
    (25) arg -> . DOLLAR_LBRACKET
    (26) arg -> . BANG_LPAREN
    (27) arg -> . BANG_LBRACKET
    (28) arg -> . ATDOLLAR_LPAREN
    (29) arg -> . AT_LPAREN
    (30) arg -> . STRING
    (31) arg -> . ANY
    (11) sub_expression -> . DOLLAR_LPAREN commands RPAREN
    (12) sub_expression -> . BANG_LPAREN commands RPAREN
    (13) sub_expression -> . ATDOLLAR_LPAREN commands RPAREN
    (14) sub_expression -> . DOLLAR_LBRACKET commands RBRACKET
    (15) sub_expression -> . BANG_LBRACKET commands RBRACKET
    (16) sub_expression -> . AT_LPAREN commands RPAREN
    (17) sub_expression -> . DOLLAR_LPAREN commands
    (18) sub_expression -> . BANG_LPAREN commands
    (19) sub_expression -> . ATDOLLAR_LPAREN commands
    (20) sub_expression -> . DOLLAR_LBRACKET commands
    (21) sub_expression -> . BANG_LBRACKET commands
    (22) sub_expression -> . AT_LPAREN commands

  ! shift/reduce conflict for DOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for DOLLAR_LBRACKET resolved as shift
  ! shift/reduce conflict for BANG_LPAREN resolved as shift
  ! shift/reduce conflict for BANG_LBRACKET resolved as shift
  ! shift/reduce conflict for ATDOLLAR_LPAREN resolved as shift
  ! shift/reduce conflict for AT_LPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ANY resolved as shift
    $end            reduce using rule 4 (command -> .)
    SEMI            reduce using rule 4 (command -> .)
    AND             reduce using rule 4 (command -> .)
    PIPE            reduce using rule 4 (command -> .)
    OR              reduce using rule 4 (command -> .)
    NEWLINE         reduce using rule 4 (command -> .)
    RPAREN          reduce using rule 4 (command -> .)
    RBRACKET        reduce using rule 4 (command -> .)
    DOLLAR_LPAREN   shift and go to state 7
    DOLLAR_LBRACKET shift and go to state 8
    BANG_LPAREN     shift and go to state 9
    BANG_LBRACKET   shift and go to state 10
    ATDOLLAR_LPAREN shift and go to state 11
    AT_LPAREN       shift and go to state 12
    STRING          shift and go to state 13
    ANY             shift and go to state 14

  ! DOLLAR_LPAREN   [ reduce using rule 4 (command -> .) ]
  ! DOLLAR_LBRACKET [ reduce using rule 4 (command -> .) ]
  ! BANG_LPAREN     [ reduce using rule 4 (command -> .) ]
  ! BANG_LBRACKET   [ reduce using rule 4 (command -> .) ]
  ! ATDOLLAR_LPAREN [ reduce using rule 4 (command -> .) ]
  ! AT_LPAREN       [ reduce using rule 4 (command -> .) ]
  ! STRING          [ reduce using rule 4 (command -> .) ]
  ! ANY             [ reduce using rule 4 (command -> .) ]

    command                        shift and go to state 32
    args                           shift and go to state 4
    arg                            shift and go to state 5
    sub_expression                 shift and go to state 6

state 20

    (33) args -> args arg .

    DOLLAR_LPAREN   reduce using rule 33 (args -> args arg .)
    DOLLAR_LBRACKET reduce using rule 33 (args -> args arg .)
    BANG_LPAREN     reduce using rule 33 (args -> args arg .)
    BANG_LBRACKET   reduce using rule 33 (args -> args arg .)
    ATDOLLAR_LPAREN reduce using rule 33 (args -> args arg .)
    AT_LPAREN       reduce using rule 33 (args -> args arg .)
    STRING          reduce using rule 33 (args -> args arg .)
    ANY             reduce using rule 33 (args -> args arg .)
    $end            reduce using rule 33 (args -> args arg .)
    SEMI            reduce using rule 33 (args -> args arg .)
    AND             reduce using rule 33 (args -> args arg .)
    PIPE            reduce using rule 33 (args -> args arg .)
    OR              reduce using rule 33 (args -> args arg .)
    NEWLINE         reduce using rule 33 (args -> args arg .)
    RPAREN          reduce using rule 33 (args -> args arg .)
    RBRACKET        reduce using rule 33 (args -> args arg .)


state 21

    (11) sub_expression -> DOLLAR_LPAREN commands . RPAREN
    (17) sub_expression -> DOLLAR_LPAREN commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RPAREN          shift and go to state 33
    DOLLAR_LPAREN   reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    DOLLAR_LBRACKET reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    BANG_LPAREN     reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    BANG_LBRACKET   reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    ATDOLLAR_LPAREN reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    AT_LPAREN       reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    STRING          reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    ANY             reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    $end            reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    RBRACKET        reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]
  ! AND             [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]
  ! PIPE            [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]
  ! OR              [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]
  ! NEWLINE         [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]
  ! RPAREN          [ reduce using rule 17 (sub_expression -> DOLLAR_LPAREN commands .) ]


state 22

    (5) commands -> command .

    DOLLAR_LPAREN   reduce using rule 5 (commands -> command .)
    DOLLAR_LBRACKET reduce using rule 5 (commands -> command .)
    BANG_LPAREN     reduce using rule 5 (commands -> command .)
    BANG_LBRACKET   reduce using rule 5 (commands -> command .)
    ATDOLLAR_LPAREN reduce using rule 5 (commands -> command .)
    AT_LPAREN       reduce using rule 5 (commands -> command .)
    STRING          reduce using rule 5 (commands -> command .)
    ANY             reduce using rule 5 (commands -> command .)
    $end            reduce using rule 5 (commands -> command .)
    SEMI            reduce using rule 5 (commands -> command .)
    AND             reduce using rule 5 (commands -> command .)
    PIPE            reduce using rule 5 (commands -> command .)
    OR              reduce using rule 5 (commands -> command .)
    NEWLINE         reduce using rule 5 (commands -> command .)
    RPAREN          reduce using rule 5 (commands -> command .)
    RBRACKET        reduce using rule 5 (commands -> command .)


state 23

    (14) sub_expression -> DOLLAR_LBRACKET commands . RBRACKET
    (20) sub_expression -> DOLLAR_LBRACKET commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RBRACKET resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RBRACKET        shift and go to state 34
    DOLLAR_LPAREN   reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    DOLLAR_LBRACKET reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    BANG_LPAREN     reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    BANG_LBRACKET   reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    ATDOLLAR_LPAREN reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    AT_LPAREN       reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    STRING          reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    ANY             reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    $end            reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    RPAREN          reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]
  ! AND             [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]
  ! PIPE            [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]
  ! OR              [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]
  ! NEWLINE         [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]
  ! RBRACKET        [ reduce using rule 20 (sub_expression -> DOLLAR_LBRACKET commands .) ]


state 24

    (12) sub_expression -> BANG_LPAREN commands . RPAREN
    (18) sub_expression -> BANG_LPAREN commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RPAREN          shift and go to state 35
    DOLLAR_LPAREN   reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    DOLLAR_LBRACKET reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    BANG_LPAREN     reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    BANG_LBRACKET   reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    ATDOLLAR_LPAREN reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    AT_LPAREN       reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    STRING          reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    ANY             reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    $end            reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    RBRACKET        reduce using rule 18 (sub_expression -> BANG_LPAREN commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]
  ! AND             [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]
  ! PIPE            [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]
  ! OR              [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]
  ! NEWLINE         [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]
  ! RPAREN          [ reduce using rule 18 (sub_expression -> BANG_LPAREN commands .) ]


state 25

    (15) sub_expression -> BANG_LBRACKET commands . RBRACKET
    (21) sub_expression -> BANG_LBRACKET commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RBRACKET resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RBRACKET        shift and go to state 36
    DOLLAR_LPAREN   reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    DOLLAR_LBRACKET reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    BANG_LPAREN     reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    BANG_LBRACKET   reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    ATDOLLAR_LPAREN reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    AT_LPAREN       reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    STRING          reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    ANY             reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    $end            reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    RPAREN          reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]
  ! AND             [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]
  ! PIPE            [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]
  ! OR              [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]
  ! NEWLINE         [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]
  ! RBRACKET        [ reduce using rule 21 (sub_expression -> BANG_LBRACKET commands .) ]


state 26

    (13) sub_expression -> ATDOLLAR_LPAREN commands . RPAREN
    (19) sub_expression -> ATDOLLAR_LPAREN commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RPAREN          shift and go to state 37
    DOLLAR_LPAREN   reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    DOLLAR_LBRACKET reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    BANG_LPAREN     reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    BANG_LBRACKET   reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    ATDOLLAR_LPAREN reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    AT_LPAREN       reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    STRING          reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    ANY             reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    $end            reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    RBRACKET        reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]
  ! AND             [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]
  ! PIPE            [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]
  ! OR              [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]
  ! NEWLINE         [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]
  ! RPAREN          [ reduce using rule 19 (sub_expression -> ATDOLLAR_LPAREN commands .) ]


state 27

    (16) sub_expression -> AT_LPAREN commands . RPAREN
    (22) sub_expression -> AT_LPAREN commands .
    (6) commands -> commands . SEMI command
    (7) commands -> commands . AND command
    (8) commands -> commands . PIPE command
    (9) commands -> commands . OR command
    (10) commands -> commands . NEWLINE command

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
    RPAREN          shift and go to state 38
    DOLLAR_LPAREN   reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    DOLLAR_LBRACKET reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    BANG_LPAREN     reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    BANG_LBRACKET   reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    ATDOLLAR_LPAREN reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    AT_LPAREN       reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    STRING          reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    ANY             reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    $end            reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    RBRACKET        reduce using rule 22 (sub_expression -> AT_LPAREN commands .)
    SEMI            shift and go to state 15
    AND             shift and go to state 16
    PIPE            shift and go to state 17
    OR              shift and go to state 18
    NEWLINE         shift and go to state 19

  ! SEMI            [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]
  ! AND             [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]
  ! PIPE            [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]
  ! OR              [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]
  ! NEWLINE         [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]
  ! RPAREN          [ reduce using rule 22 (sub_expression -> AT_LPAREN commands .) ]


state 28

    (6) commands -> commands SEMI command .

    SEMI            reduce using rule 6 (commands -> commands SEMI command .)
    AND             reduce using rule 6 (commands -> commands SEMI command .)
    PIPE            reduce using rule 6 (commands -> commands SEMI command .)
    OR              reduce using rule 6 (commands -> commands SEMI command .)
    NEWLINE         reduce using rule 6 (commands -> commands SEMI command .)
    $end            reduce using rule 6 (commands -> commands SEMI command .)
    DOLLAR_LPAREN   reduce using rule 6 (commands -> commands SEMI command .)
    DOLLAR_LBRACKET reduce using rule 6 (commands -> commands SEMI command .)
    BANG_LPAREN     reduce using rule 6 (commands -> commands SEMI command .)
    BANG_LBRACKET   reduce using rule 6 (commands -> commands SEMI command .)
    ATDOLLAR_LPAREN reduce using rule 6 (commands -> commands SEMI command .)
    AT_LPAREN       reduce using rule 6 (commands -> commands SEMI command .)
    STRING          reduce using rule 6 (commands -> commands SEMI command .)
    ANY             reduce using rule 6 (commands -> commands SEMI command .)
    RPAREN          reduce using rule 6 (commands -> commands SEMI command .)
    RBRACKET        reduce using rule 6 (commands -> commands SEMI command .)


state 29

    (7) commands -> commands AND command .

    SEMI            reduce using rule 7 (commands -> commands AND command .)
    AND             reduce using rule 7 (commands -> commands AND command .)
    PIPE            reduce using rule 7 (commands -> commands AND command .)
    OR              reduce using rule 7 (commands -> commands AND command .)
    NEWLINE         reduce using rule 7 (commands -> commands AND command .)
    $end            reduce using rule 7 (commands -> commands AND command .)
    DOLLAR_LPAREN   reduce using rule 7 (commands -> commands AND command .)
    DOLLAR_LBRACKET reduce using rule 7 (commands -> commands AND command .)
    BANG_LPAREN     reduce using rule 7 (commands -> commands AND command .)
    BANG_LBRACKET   reduce using rule 7 (commands -> commands AND command .)
    ATDOLLAR_LPAREN reduce using rule 7 (commands -> commands AND command .)
    AT_LPAREN       reduce using rule 7 (commands -> commands AND command .)
    STRING          reduce using rule 7 (commands -> commands AND command .)
    ANY             reduce using rule 7 (commands -> commands AND command .)
    RPAREN          reduce using rule 7 (commands -> commands AND command .)
    RBRACKET        reduce using rule 7 (commands -> commands AND command .)


state 30

    (8) commands -> commands PIPE command .

    SEMI            reduce using rule 8 (commands -> commands PIPE command .)
    AND             reduce using rule 8 (commands -> commands PIPE command .)
    PIPE            reduce using rule 8 (commands -> commands PIPE command .)
    OR              reduce using rule 8 (commands -> commands PIPE command .)
    NEWLINE         reduce using rule 8 (commands -> commands PIPE command .)
    $end            reduce using rule 8 (commands -> commands PIPE command .)
    DOLLAR_LPAREN   reduce using rule 8 (commands -> commands PIPE command .)
    DOLLAR_LBRACKET reduce using rule 8 (commands -> commands PIPE command .)
    BANG_LPAREN     reduce using rule 8 (commands -> commands PIPE command .)
    BANG_LBRACKET   reduce using rule 8 (commands -> commands PIPE command .)
    ATDOLLAR_LPAREN reduce using rule 8 (commands -> commands PIPE command .)
    AT_LPAREN       reduce using rule 8 (commands -> commands PIPE command .)
    STRING          reduce using rule 8 (commands -> commands PIPE command .)
    ANY             reduce using rule 8 (commands -> commands PIPE command .)
    RPAREN          reduce using rule 8 (commands -> commands PIPE command .)
    RBRACKET        reduce using rule 8 (commands -> commands PIPE command .)


state 31

    (9) commands -> commands OR command .

    SEMI            reduce using rule 9 (commands -> commands OR command .)
    AND             reduce using rule 9 (commands -> commands OR command .)
    PIPE            reduce using rule 9 (commands -> commands OR command .)
    OR              reduce using rule 9 (commands -> commands OR command .)
    NEWLINE         reduce using rule 9 (commands -> commands OR command .)
    $end            reduce using rule 9 (commands -> commands OR command .)
    DOLLAR_LPAREN   reduce using rule 9 (commands -> commands OR command .)
    DOLLAR_LBRACKET reduce using rule 9 (commands -> commands OR command .)
    BANG_LPAREN     reduce using rule 9 (commands -> commands OR command .)
    BANG_LBRACKET   reduce using rule 9 (commands -> commands OR command .)
    ATDOLLAR_LPAREN reduce using rule 9 (commands -> commands OR command .)
    AT_LPAREN       reduce using rule 9 (commands -> commands OR command .)
    STRING          reduce using rule 9 (commands -> commands OR command .)
    ANY             reduce using rule 9 (commands -> commands OR command .)
    RPAREN          reduce using rule 9 (commands -> commands OR command .)
    RBRACKET        reduce using rule 9 (commands -> commands OR command .)


state 32

    (10) commands -> commands NEWLINE command .

    SEMI            reduce using rule 10 (commands -> commands NEWLINE command .)
    AND             reduce using rule 10 (commands -> commands NEWLINE command .)
    PIPE            reduce using rule 10 (commands -> commands NEWLINE command .)
    OR              reduce using rule 10 (commands -> commands NEWLINE command .)
    NEWLINE         reduce using rule 10 (commands -> commands NEWLINE command .)
    $end            reduce using rule 10 (commands -> commands NEWLINE command .)
    DOLLAR_LPAREN   reduce using rule 10 (commands -> commands NEWLINE command .)
    DOLLAR_LBRACKET reduce using rule 10 (commands -> commands NEWLINE command .)
    BANG_LPAREN     reduce using rule 10 (commands -> commands NEWLINE command .)
    BANG_LBRACKET   reduce using rule 10 (commands -> commands NEWLINE command .)
    ATDOLLAR_LPAREN reduce using rule 10 (commands -> commands NEWLINE command .)
    AT_LPAREN       reduce using rule 10 (commands -> commands NEWLINE command .)
    STRING          reduce using rule 10 (commands -> commands NEWLINE command .)
    ANY             reduce using rule 10 (commands -> commands NEWLINE command .)
    RPAREN          reduce using rule 10 (commands -> commands NEWLINE command .)
    RBRACKET        reduce using rule 10 (commands -> commands NEWLINE command .)


state 33

    (11) sub_expression -> DOLLAR_LPAREN commands RPAREN .

    DOLLAR_LPAREN   reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    DOLLAR_LBRACKET reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    BANG_LPAREN     reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    BANG_LBRACKET   reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    ATDOLLAR_LPAREN reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    AT_LPAREN       reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    STRING          reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    ANY             reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    $end            reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    SEMI            reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    AND             reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    PIPE            reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    OR              reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    NEWLINE         reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    RPAREN          reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)
    RBRACKET        reduce using rule 11 (sub_expression -> DOLLAR_LPAREN commands RPAREN .)


state 34

    (14) sub_expression -> DOLLAR_LBRACKET commands RBRACKET .

    DOLLAR_LPAREN   reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    DOLLAR_LBRACKET reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    BANG_LPAREN     reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    BANG_LBRACKET   reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    ATDOLLAR_LPAREN reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    AT_LPAREN       reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    STRING          reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    ANY             reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    $end            reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    SEMI            reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    AND             reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    PIPE            reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    OR              reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    NEWLINE         reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    RPAREN          reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)
    RBRACKET        reduce using rule 14 (sub_expression -> DOLLAR_LBRACKET commands RBRACKET .)


state 35

    (12) sub_expression -> BANG_LPAREN commands RPAREN .

    DOLLAR_LPAREN   reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    DOLLAR_LBRACKET reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    BANG_LPAREN     reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    BANG_LBRACKET   reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    ATDOLLAR_LPAREN reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    AT_LPAREN       reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    STRING          reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    ANY             reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    $end            reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    SEMI            reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    AND             reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    PIPE            reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    OR              reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    NEWLINE         reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    RPAREN          reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)
    RBRACKET        reduce using rule 12 (sub_expression -> BANG_LPAREN commands RPAREN .)


state 36

    (15) sub_expression -> BANG_LBRACKET commands RBRACKET .

    DOLLAR_LPAREN   reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    DOLLAR_LBRACKET reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    BANG_LPAREN     reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    BANG_LBRACKET   reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    ATDOLLAR_LPAREN reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    AT_LPAREN       reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    STRING          reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    ANY             reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    $end            reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    SEMI            reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    AND             reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    PIPE            reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    OR              reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    NEWLINE         reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    RPAREN          reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)
    RBRACKET        reduce using rule 15 (sub_expression -> BANG_LBRACKET commands RBRACKET .)


state 37

    (13) sub_expression -> ATDOLLAR_LPAREN commands RPAREN .

    DOLLAR_LPAREN   reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    DOLLAR_LBRACKET reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    BANG_LPAREN     reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    BANG_LBRACKET   reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    ATDOLLAR_LPAREN reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    AT_LPAREN       reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    STRING          reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    ANY             reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    $end            reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    SEMI            reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    AND             reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    PIPE            reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    OR              reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    NEWLINE         reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    RPAREN          reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)
    RBRACKET        reduce using rule 13 (sub_expression -> ATDOLLAR_LPAREN commands RPAREN .)


state 38

    (16) sub_expression -> AT_LPAREN commands RPAREN .

    DOLLAR_LPAREN   reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    DOLLAR_LBRACKET reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    BANG_LPAREN     reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    BANG_LBRACKET   reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    ATDOLLAR_LPAREN reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    AT_LPAREN       reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    STRING          reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    ANY             reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    $end            reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    SEMI            reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    AND             reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    PIPE            reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    OR              reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    NEWLINE         reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    RPAREN          reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)
    RBRACKET        reduce using rule 16 (sub_expression -> AT_LPAREN commands RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 4 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 4 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for ANY in state 4 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 7 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 7 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for STRING in state 7 resolved as shift
WARNING: shift/reduce conflict for ANY in state 7 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 8 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 8 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 8 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 8 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for ANY in state 8 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 9 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 9 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 9 resolved as shift
WARNING: shift/reduce conflict for ANY in state 9 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 10 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 10 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for ANY in state 10 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 11 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 11 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for ANY in state 11 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 12 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 12 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING in state 12 resolved as shift
WARNING: shift/reduce conflict for ANY in state 12 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 15 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 15 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for ANY in state 15 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 16 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 16 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 16 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for ANY in state 16 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 17 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 17 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for ANY in state 17 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 18 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 18 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for ANY in state 18 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for DOLLAR_LBRACKET in state 19 resolved as shift
WARNING: shift/reduce conflict for BANG_LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for BANG_LBRACKET in state 19 resolved as shift
WARNING: shift/reduce conflict for ATDOLLAR_LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for AT_LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for STRING in state 19 resolved as shift
WARNING: shift/reduce conflict for ANY in state 19 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 21 resolved as shift
WARNING: shift/reduce conflict for AND in state 21 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 21 resolved as shift
WARNING: shift/reduce conflict for OR in state 21 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 21 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 23 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 23 resolved as shift
WARNING: shift/reduce conflict for AND in state 23 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 23 resolved as shift
WARNING: shift/reduce conflict for OR in state 23 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 23 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 24 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 24 resolved as shift
WARNING: shift/reduce conflict for AND in state 24 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 24 resolved as shift
WARNING: shift/reduce conflict for OR in state 24 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 24 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 25 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 25 resolved as shift
WARNING: shift/reduce conflict for AND in state 25 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 25 resolved as shift
WARNING: shift/reduce conflict for OR in state 25 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 25 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 26 resolved as shift
WARNING: shift/reduce conflict for AND in state 26 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 26 resolved as shift
WARNING: shift/reduce conflict for OR in state 26 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 26 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 27 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 27 resolved as shift
WARNING: shift/reduce conflict for AND in state 27 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 27 resolved as shift
WARNING: shift/reduce conflict for OR in state 27 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 27 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (context -> command)
WARNING: rejected rule (commands -> command) in state 2
WARNING: reduce/reduce conflict in state 7 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> DOLLAR_LPAREN) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> DOLLAR_LBRACKET) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> BANG_LPAREN) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> BANG_LBRACKET) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> ATDOLLAR_LPAREN) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (command -> <empty>)
WARNING: rejected rule (arg -> AT_LPAREN) in state 12
WARNING: Rule (arg -> DOLLAR_LPAREN) is never reduced
WARNING: Rule (arg -> DOLLAR_LBRACKET) is never reduced
WARNING: Rule (arg -> BANG_LPAREN) is never reduced
WARNING: Rule (arg -> BANG_LBRACKET) is never reduced
WARNING: Rule (arg -> ATDOLLAR_LPAREN) is never reduced
WARNING: Rule (arg -> AT_LPAREN) is never reduced
